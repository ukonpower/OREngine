# Main deployment to GitHub Pages
# Note: Set GitHub Pages source to "Deploy from a branch" and select "gh-pages" branch in repository settings
name: deploy-main

on:
  push:
    branches:
      - main
      - master
      - develop
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      base: ${{ steps.vars.outputs.BASE }}
      dir: ${{ steps.vars.outputs.DIR }}
      page_url: ${{ steps.vars.outputs.PAGE_URL }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Install dependencies
        run: npm ci
      - name: Determine deploy path
        id: vars
        run: |
          REPO="/${{ github.event.repository.name }}"
          if [ "${{ github.ref_name }}" = "develop" ]; then
            BASE="${REPO}/develop/"
            echo "BASE=${BASE}" >> "$GITHUB_OUTPUT"
            echo "DIR=develop" >> "$GITHUB_OUTPUT"
            echo "PAGE_URL=https://${{ github.repository_owner }}.github.io${BASE}" >> "$GITHUB_OUTPUT"
          else
            BASE="${REPO}/"
            echo "BASE=${BASE}" >> "$GITHUB_OUTPUT"
            echo "DIR=" >> "$GITHUB_OUTPUT"
            echo "PAGE_URL=https://${{ github.repository_owner }}.github.io${BASE}" >> "$GITHUB_OUTPUT"
          fi
      - name: Build demo
        run: npm run prebuild
        env:
          BASE_PATH: ${{ steps.vars.outputs.BASE }}
          SKIP_SHADER_MINIFIER: "true"
      - name: Build storybook
        run: npm run build-storybook -- --output-dir=storybook-static
        env:
          STORYBOOK_BASE_PATH: ${{ steps.vars.outputs.BASE }}storybook/
      - name: Move build output to temp
        run: |
          mv dist /tmp/dist
          mv storybook-static /tmp/storybook-static
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0
        continue-on-error: true
      - name: Setup gh-pages branch if not exists
        run: |
          if ! git rev-parse --verify gh-pages >/dev/null 2>&1; then
            echo "Creating new gh-pages branch"
            git checkout --orphan gh-pages
            git rm -rf .
            echo "<html><body><h1>GitHub Pages</h1></body></html>" > index.html
            git add index.html
            git config --global user.name "GitHub Actions"
            git config --global user.email "action@github.com"
            git commit -m "Initial gh-pages commit"
            git push origin gh-pages
          fi
      - name: Preserve existing content and prepare new deployment
        run: |
          # Preserve PR preview directories and .github directory
          mkdir -p /tmp/preserve
          find . -maxdepth 1 -type d -name 'pr-*' -exec cp -r {} /tmp/preserve/ \; || true
          find . -maxdepth 1 -type d -name 'develop' -exec cp -r {} /tmp/preserve/ \; || true
          if [ -d .github/workflows ]; then
            mkdir -p /tmp/preserve/.github
            cp -r .github/workflows /tmp/preserve/.github/
          fi
          
          if [ -z "${{ steps.vars.outputs.DIR }}" ]; then
            # Main branch deployment - clear root but preserve subdirectories
            find . -maxdepth 1 -type f -delete || true
            find . -maxdepth 1 -name 'storybook' -type d -exec rm -rf {} + || true
            # Restore preserved directories
            shopt -s dotglob nullglob
            mv /tmp/preserve/* . 2>/dev/null || true
            shopt -u dotglob nullglob
            # Add new content
            mkdir -p storybook
            cp -r /tmp/dist/* .
            cp -r /tmp/storybook-static/* storybook/
          else
            # Branch/PR deployment - clear only target directory
            rm -rf ${{ steps.vars.outputs.DIR }} || true
            # Restore preserved directories
            shopt -s dotglob nullglob
            mv /tmp/preserve/* . 2>/dev/null || true
            shopt -u dotglob nullglob
            # Add new content to subdirectory
            mkdir -p ${{ steps.vars.outputs.DIR }}/storybook
            cp -r /tmp/dist/* ${{ steps.vars.outputs.DIR }}/
            cp -r /tmp/storybook-static/* ${{ steps.vars.outputs.DIR }}/storybook/
          fi
          
          # Add .nojekyll file
          touch .nojekyll
      - name: Commit and push to gh-pages
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "action@github.com"
          git add -A
          set +e
          git diff --staged --exit-code --quiet
          if [[ $? -eq 1 ]]; then
            if [ -z "${{ steps.vars.outputs.DIR }}" ]; then
              git commit -m "Deploy to gh-pages: ${{ github.sha }}"
            else
              git commit -m "Deploy ${{ steps.vars.outputs.DIR }} to gh-pages: ${{ github.sha }}"
            fi
            git push origin gh-pages
            echo "Successfully deployed to gh-pages"
          else
            echo "No changes to deploy"
          fi
      - name: Output deployment URL
        run: |
          echo "Deployed to: ${{ steps.vars.outputs.PAGE_URL }}" >> $GITHUB_STEP_SUMMARY

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


