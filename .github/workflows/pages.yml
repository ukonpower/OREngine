name: deploy-pages

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - master
      - develop
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      base: ${{ steps.vars.outputs.BASE }}
      dir: ${{ steps.vars.outputs.DIR }}
      page_url: ${{ steps.vars.outputs.PAGE_URL }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"
      - name: Install dependencies
        run: npm ci
      - name: Install shader-minifier
        run: npm install shader-minifier
      - name: Setup shader-minifier PATH
        run: echo "$(pwd)/node_modules/shader-minifier/binary" >> $GITHUB_PATH
      - name: Determine deploy path
        id: vars
        run: |
          REPO="/${{ github.event.repository.name }}"
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "BASE=${REPO}/pr-${{ github.event.pull_request.number }}/" >> "$GITHUB_OUTPUT"
            echo "DIR=pr-${{ github.event.pull_request.number }}" >> "$GITHUB_OUTPUT"
          elif [ "${{ github.ref_name }}" = "develop" ]; then
            echo "BASE=${REPO}/develop/" >> "$GITHUB_OUTPUT"
            echo "DIR=develop" >> "$GITHUB_OUTPUT"
          else
            echo "BASE=${REPO}/" >> "$GITHUB_OUTPUT"
            echo "DIR=" >> "$GITHUB_OUTPUT"
          fi
          echo "PAGE_URL=https://${{ github.repository_owner }}.github.io${BASE}" >> "$GITHUB_OUTPUT"
      - name: Build demo
        run: npm run prebuild
        env:
          BASE_PATH: ${{ steps.vars.outputs.BASE }}
          SKIP_SHADER_MINIFIER: "true"
      - name: Build storybook
        run: npm run build-storybook -- --output-dir=storybook-static
        env:
          STORYBOOK_BASE_PATH: ${{ steps.vars.outputs.BASE }}storybook/
      - name: Prepare Pages artifact
        run: |
          if [ -z "${{ steps.vars.outputs.DIR }}" ]; then
            mkdir -p public/storybook
            cp -r dist/* public/
            cp -r storybook-static/* public/storybook/
          else
            mkdir -p public/${{ steps.vars.outputs.DIR }}/storybook
            cp -r dist/* public/${{ steps.vars.outputs.DIR }}/
            cp -r storybook-static/* public/${{ steps.vars.outputs.DIR }}/storybook/
          fi
      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name == 'develop' && 'github-pages-develop' || 'github-pages' }}
      url: ${{ needs.build.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
        with:
          preview: ${{ github.event_name == 'pull_request' }}
      - name: Output page URL
        run: echo "Deployed to: ${{ needs.build.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
